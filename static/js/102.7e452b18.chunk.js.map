{"version":3,"file":"static/js/102.7e452b18.chunk.js","mappings":"sRAEMA,EAAU,4CAEVC,E,MAAeC,GAAAA,OAAa,CAChCC,QAAS,kCAGJ,SAASC,IACd,OAAOH,EAAa,qBAAD,OAAsBD,EAAtB,YAAwCK,MAAK,SAAAC,GAC9D,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASI,EAAiBC,GAC/B,OAAOV,EAAa,eAAD,OAAgBD,EAAhB,kBAAiCW,EAAjC,YAAqDN,MACtE,SAAAC,GACE,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAKN,SAASM,EAAeC,GAC7B,OAAOZ,EAAa,SAAD,OAAUY,GAAV,OAAeb,EAAf,oBAAyCK,MAAK,SAAAC,GAC/D,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASQ,EAAeD,GAC7B,OAAOZ,EAAa,UAAD,OAAWY,EAAX,mBAAwBb,IAAWK,MAAK,SAAAC,GACzD,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASS,EAAkBF,GAChC,OAAOZ,EAAa,UAAD,OACPY,EADO,mBACMb,EADN,2BAEjBK,MAAK,SAAAC,GACL,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,O,yFCqBX,UAtEe,SAAC,GAAiB,EAAfU,SAAgB,IAChC,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQT,EAAaU,IAAI,SAEjB,OAAVD,GACFE,EAAAA,GAA0BF,GACvBtB,MAAK,SAAAyB,GACJN,EAAaM,EAASC,KAAKC,YAE5BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAsBhC,OACE,iCACE,mBAAQG,UAAU,GAAlB,UACE,kBAAMA,UAAU,GAAGrB,SAlBJ,SAAAsB,GACnBA,EAAMC,iBAEqB,KAAvBlB,EAAYmB,QACdL,QAAQC,IAAI,aAGdjB,EAAgB,SAAD,OAAUE,IACzBQ,EAAAA,GAA0BR,GACvBhB,MAAK,SAAAyB,GACJN,EAAaM,EAASC,KAAKC,YAE5BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAM1B,WACE,mBAAQO,KAAK,SAASJ,UAAU,GAAhC,UACE,iBAAMA,UAAU,GAAhB,uBAEF,kBACEA,UAAU,GACVK,KAAK,cACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAjCW,SAAAR,GACnBhB,EAAegB,EAAMS,cAAcC,QAiC3BA,MAAO3B,SAKZE,GACCA,EAAU0B,KAAI,SAAAC,GACZ,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAM7B,GAA/C,UACG,IACAyB,EAAKK,UAHDL,EAAKE","sources":["components/FetchApi/FetchApi.js","components/Views/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '?api_key=ad8c6c4dd7f8a685c9c739255442ccd5';\n\nconst axiosRequest = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport function FetchTrends() {\n  return axiosRequest(`trending/movie/day${API_KEY}&page=1`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieByName(movieName) {\n  return axiosRequest(`search/movie${API_KEY}&query=${movieName}&page=1`).then(\n    res => {\n      if (!(res.status >= 200 && res.status < 300)) {\n        throw Error(res.statusText);\n      }\n      return res;\n    }\n  );\n}\n\nexport function FetchMovieById(ID) {\n  return axiosRequest(`movie/${ID}${API_KEY}&language=en-US`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieCast(ID) {\n  return axiosRequest(`/movie/${ID}/credits${API_KEY}`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieReviews(ID) {\n  return axiosRequest(\n    `/movie/${ID}/reviews${API_KEY}&language=en-US&page=1`\n  ).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n","import * as FetchApi from '../FetchApi/FetchApi';\nimport React, { useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filmsList, setFilmsList] = useState(null);\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n\n  if (query !== null) {\n    FetchApi.FetchMovieByName(query)\n      .then(articles => {\n        setFilmsList(articles.data.results);\n      })\n      .catch(error => console.log(error));\n  }\n\n  const handleChange = event => {\n    setSearchQuery(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      console.log('Warning !');\n    }\n\n    setSearchParams(`query=${searchQuery}`);\n    FetchApi.FetchMovieByName(searchQuery)\n      .then(articles => {\n        setFilmsList(articles.data.results);\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <>\n      <header className=\"\">\n        <form className=\"\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"\">\n            <span className=\"\">Search</span>\n          </button>\n          <input\n            className=\"\"\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={handleChange}\n            value={searchQuery}\n          />\n        </form>\n      </header>\n\n      {filmsList &&\n        filmsList.map(item => {\n          return (\n            <li key={item.id}>\n              <Link to={`/movies/${item.id}`} state={{ from: location }}>\n                {' '}\n                {item.title}\n              </Link>\n            </li>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axiosRequest","axios","baseURL","FetchTrends","then","res","status","Error","statusText","FetchMovieByName","movieName","FetchMovieById","ID","FetchMovieCast","FetchMovieReviews","onSubmit","useSearchParams","searchParams","setSearchParams","useState","searchQuery","setSearchQuery","filmsList","setFilmsList","location","useLocation","query","get","FetchApi","articles","data","results","catch","error","console","log","className","event","preventDefault","trim","type","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","map","item","to","id","state","from","title"],"sourceRoot":""}