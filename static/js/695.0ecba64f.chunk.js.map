{"version":3,"file":"static/js/695.0ecba64f.chunk.js","mappings":"sRAEMA,EAAU,4CAEVC,E,MAAeC,GAAAA,OAAa,CAChCC,QAAS,kCAGJ,SAASC,IACd,OAAOH,EAAa,qBAAD,OAAsBD,EAAtB,YAAwCK,MAAK,SAAAC,GAC9D,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASI,EAAiBC,GAC/B,OAAOV,EAAa,eAAD,OAAgBD,EAAhB,kBAAiCW,EAAjC,YAAqDN,MACtE,SAAAC,GACE,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAKN,SAASM,EAAeC,GAC7B,OAAOZ,EAAa,SAAD,OAAUY,GAAV,OAAeb,EAAf,oBAAyCK,MAAK,SAAAC,GAC/D,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASQ,EAAeD,GAC7B,OAAOZ,EAAa,UAAD,OAAWY,EAAX,mBAAwBb,IAAWK,MAAK,SAAAC,GACzD,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASS,EAAkBF,GAChC,OAAOZ,EAAa,UAAD,OACPY,EADO,mBACMb,EADN,2BAEjBK,MAAK,SAAAC,GACL,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,O,yFCJX,UA7CkB,WAAO,IAAD,IACtB,GAAwBU,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAwBL,GACrBhB,MAAK,SAAAsB,GAAS,OAAIT,EAAQS,EAAUC,SACpCC,OAAM,SAAAV,GACLW,QAAQC,IAAIZ,GACZC,EAASD,QAEZ,CAACE,IAEJ,IAAMW,EAAI,iBAAGT,QAAH,IAAGA,GAAH,UAAGA,EAAUU,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAGtC,OADAJ,QAAQC,IAAIR,EAASU,MAAMC,OAEzB,iCACE,SAAC,KAAD,CAAMC,GAAIH,EAAV,qBACCX,EAFH,eAGGF,IAAS,wDACTF,IACC,gBACEmB,IAAI,eACJC,IAAG,0CAAqCpB,EAAKqB,aAC7CC,MAAM,WAGV,yBACE,SAAC,KAAD,CAAMJ,GAAG,OAAOF,MAAO,CAAEC,KAAMF,GAA/B,uBAIF,yBACE,SAAC,KAAD,CAAMG,GAAG,UAAUF,MAAO,CAAEC,KAAMF,GAAlC,0BAIF,SAAC,KAAD","sources":["components/FetchApi/FetchApi.js","components/Views/MoviePage.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '?api_key=ad8c6c4dd7f8a685c9c739255442ccd5';\n\nconst axiosRequest = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport function FetchTrends() {\n  return axiosRequest(`trending/movie/day${API_KEY}&page=1`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieByName(movieName) {\n  return axiosRequest(`search/movie${API_KEY}&query=${movieName}&page=1`).then(\n    res => {\n      if (!(res.status >= 200 && res.status < 300)) {\n        throw Error(res.statusText);\n      }\n      return res;\n    }\n  );\n}\n\nexport function FetchMovieById(ID) {\n  return axiosRequest(`movie/${ID}${API_KEY}&language=en-US`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieCast(ID) {\n  return axiosRequest(`/movie/${ID}/credits${API_KEY}`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieReviews(ID) {\n  return axiosRequest(\n    `/movie/${ID}/reviews${API_KEY}&language=en-US&page=1`\n  ).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport * as FetchApi from '../FetchApi/FetchApi';\n\nconst MoviePage = () => {\n  const [film, setFilm] = useState(null);\n  const [error, setError] = useState(null);\n  const { itemId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    FetchApi.FetchMovieById(itemId)\n      .then(movieInfo => setFilm(movieInfo.data))\n      .catch(error => {\n        console.log(error);\n        setError(error);\n      });\n  }, [itemId]);\n\n  const path = location?.state?.from ?? '/';\n\n  console.log(location.state.from);\n  return (\n    <>\n      <Link to={path}>Go Back</Link>\n      {itemId} Movie page1\n      {error && <div>There are no succh movie !</div>}\n      {film && (\n        <img\n          alt=\"Movie Poster\"\n          src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n          width=\"200px\"\n        ></img>\n      )}\n      <li>\n        <Link to=\"Cast\" state={{ from: path }}>\n          Cast !\n        </Link>\n      </li>\n      <li>\n        <Link to=\"Reviews\" state={{ from: path }}>\n          Reviews !\n        </Link>\n      </li>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviePage;\n"],"names":["API_KEY","axiosRequest","axios","baseURL","FetchTrends","then","res","status","Error","statusText","FetchMovieByName","movieName","FetchMovieById","ID","FetchMovieCast","FetchMovieReviews","useState","film","setFilm","error","setError","itemId","useParams","location","useLocation","useEffect","FetchApi","movieInfo","data","catch","console","log","path","state","from","to","alt","src","poster_path","width"],"sourceRoot":""}