{"version":3,"file":"static/js/133.68d302a9.chunk.js","mappings":"sRAEMA,EAAU,4CAEVC,E,MAAeC,GAAAA,OAAa,CAChCC,QAAS,kCAGJ,SAASC,IACd,OAAOH,EAAa,qBAAD,OAAsBD,EAAtB,YAAwCK,MAAK,SAAAC,GAC9D,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASI,EAAiBC,GAC/B,OAAOV,EAAa,eAAD,OAAgBD,EAAhB,kBAAiCW,EAAjC,YAAqDN,MACtE,SAAAC,GACE,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAKN,SAASM,EAAeC,GAC7B,OAAOZ,EAAa,SAAD,OAAUY,GAAV,OAAeb,EAAf,oBAAyCK,MAAK,SAAAC,GAC/D,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASQ,EAAeD,GAC7B,OAAOZ,EAAa,UAAD,OAAWY,EAAX,mBAAwBb,IAAWK,MAAK,SAAAC,GACzD,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASS,EAAkBF,GAChC,OAAOZ,EAAa,UAAD,OACPY,EADO,mBACMb,EADN,2BAEjBK,MAAK,SAAAC,GACL,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,O,yFCnBX,UA7BgB,WACd,OAA8BU,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAWR,OATAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BH,GACxBd,MAAK,SAAAkB,GAAS,OAAIL,EAAWK,EAAUC,KAAKC,YAC5CC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,CAACR,KAIF,gBAAKW,UAAWC,EAAAA,EAAAA,iBAAhB,SACGd,GAAWA,EAAQe,OAAS,EACzBf,EAAQgB,KAAI,SAAAC,GACV,OACE,gBAAkBJ,UAAWC,EAAAA,EAAAA,SAA7B,WACE,cAAGD,UAAWC,EAAAA,EAAAA,SAAd,SAAgCG,EAAKC,UACrC,uBAAID,EAAKE,YAFFF,EAAKG,OAHrB","sources":["services/FetchApi.js","views/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '?api_key=ad8c6c4dd7f8a685c9c739255442ccd5';\n\nconst axiosRequest = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport function FetchTrends() {\n  return axiosRequest(`trending/movie/day${API_KEY}&page=1`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieByName(movieName) {\n  return axiosRequest(`search/movie${API_KEY}&query=${movieName}&page=1`).then(\n    res => {\n      if (!(res.status >= 200 && res.status < 300)) {\n        throw Error(res.statusText);\n      }\n      return res;\n    }\n  );\n}\n\nexport function FetchMovieById(ID) {\n  return axiosRequest(`movie/${ID}${API_KEY}&language=en-US`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieCast(ID) {\n  return axiosRequest(`/movie/${ID}/credits${API_KEY}`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieReviews(ID) {\n  return axiosRequest(\n    `/movie/${ID}/reviews${API_KEY}&language=en-US&page=1`\n  ).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as FetchApi from '../services/FetchApi';\nimport styles from './views.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { itemId } = useParams();\n\n  useEffect(() => {\n    FetchApi.FetchMovieReviews(itemId)\n      .then(movieInfo => setReviews(movieInfo.data.results))\n      .catch(error => {\n        console.log(error);\n      });\n  }, [itemId]);\n\n  // console.log('REVIEWS', reviews);\n  return (\n    <div className={styles.reviewsContainer}>\n      {reviews && reviews.length > 0\n        ? reviews.map(item => {\n            return (\n              <li key={item.id} className={styles.listItem}>\n                <p className={styles.boldFont}>{item.author}</p>\n                <p>{item.content}</p>\n              </li>\n            );\n          })\n        : `We don't have any review for this movie`}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axiosRequest","axios","baseURL","FetchTrends","then","res","status","Error","statusText","FetchMovieByName","movieName","FetchMovieById","ID","FetchMovieCast","FetchMovieReviews","useState","reviews","setReviews","itemId","useParams","useEffect","FetchApi","movieInfo","data","results","catch","error","console","log","className","styles","length","map","item","author","content","id"],"sourceRoot":""}