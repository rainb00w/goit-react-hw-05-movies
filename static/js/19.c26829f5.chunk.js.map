{"version":3,"file":"static/js/19.c26829f5.chunk.js","mappings":"qRAEMA,EAAU,4CAEVC,E,MAAeC,GAAAA,OAAa,CAChCC,QAAS,kCAGJ,SAASC,IACd,OAAOH,EAAa,qBAAD,OAAsBD,EAAtB,YAAwCK,MAAK,SAAAC,GAC9D,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASI,EAAiBC,GAC/B,OAAOV,EAAa,eAAD,OAAgBD,EAAhB,kBAAiCW,EAAjC,YAAqDN,MACtE,SAAAC,GACE,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAKN,SAASM,EAAeC,GAC7B,OAAOZ,EAAa,SAAD,OAAUY,GAAV,OAAeb,EAAf,oBAAyCK,MAAK,SAAAC,GAC/D,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASQ,EAAeD,GAC7B,OAAOZ,EAAa,UAAD,OAAWY,EAAX,mBAAwBb,IAAWK,MAAK,SAAAC,GACzD,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,KAIJ,SAASS,EAAkBF,GAChC,OAAOZ,EAAa,UAAD,OACPY,EADO,mBACMb,EADN,2BAEjBK,MAAK,SAAAC,GACL,KAAMA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KACtC,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,O,gFCjBX,UAhCa,WACX,OAAwBU,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAUR,OARAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAwBH,GACrBd,MAAK,SAAAkB,GAAS,OAAIL,EAAQK,EAAUC,KAAKP,SACzCQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,CAACP,KAGF,8BACGF,GACCA,EAAKY,KAAI,SAAAC,GACP,OACE,2BACE,gBACEC,IAAI,eACJC,IAAG,0CAAqCF,EAAKG,cAC7CC,MAAM,WAER,uBAAIJ,EAAKK,QACT,uBAAIL,EAAKM,cAPFN,EAAKO","sources":["components/FetchApi/FetchApi.js","components/Views/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '?api_key=ad8c6c4dd7f8a685c9c739255442ccd5';\n\nconst axiosRequest = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport function FetchTrends() {\n  return axiosRequest(`trending/movie/day${API_KEY}&page=1`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieByName(movieName) {\n  return axiosRequest(`search/movie${API_KEY}&query=${movieName}&page=1`).then(\n    res => {\n      if (!(res.status >= 200 && res.status < 300)) {\n        throw Error(res.statusText);\n      }\n      return res;\n    }\n  );\n}\n\nexport function FetchMovieById(ID) {\n  return axiosRequest(`movie/${ID}${API_KEY}&language=en-US`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieCast(ID) {\n  return axiosRequest(`/movie/${ID}/credits${API_KEY}`).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n\nexport function FetchMovieReviews(ID) {\n  return axiosRequest(\n    `/movie/${ID}/reviews${API_KEY}&language=en-US&page=1`\n  ).then(res => {\n    if (!(res.status >= 200 && res.status < 300)) {\n      throw Error(res.statusText);\n    }\n    return res;\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as FetchApi from '../FetchApi/FetchApi';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { itemId } = useParams();\n\n  useEffect(() => {\n    FetchApi.FetchMovieCast(itemId)\n      .then(movieInfo => setCast(movieInfo.data.cast))\n      .catch(error => {\n        console.log(error);\n      });\n  }, [itemId]);\n\n  return (\n    <>\n      {cast &&\n        cast.map(item => {\n          return (\n            <li key={item.id}>\n              <img\n                alt=\"Movie Poster\"\n                src={`https://image.tmdb.org/t/p/w500/${item.profile_path}`}\n                width=\"100px\"\n              ></img>\n              <p>{item.name}</p>\n              <p>{item.character}</p>\n            </li>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axiosRequest","axios","baseURL","FetchTrends","then","res","status","Error","statusText","FetchMovieByName","movieName","FetchMovieById","ID","FetchMovieCast","FetchMovieReviews","useState","cast","setCast","itemId","useParams","useEffect","FetchApi","movieInfo","data","catch","error","console","log","map","item","alt","src","profile_path","width","name","character","id"],"sourceRoot":""}